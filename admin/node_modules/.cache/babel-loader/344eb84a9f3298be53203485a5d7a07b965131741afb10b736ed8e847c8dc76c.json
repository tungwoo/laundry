{"ast":null,"code":"import axios from 'axios';\nimport { Modal, notification, message } from 'ant-design-vue';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || 'http://localhost:8080/api',\n  // api的base_url\n  timeout: 15000 // 请求超时时间\n});\n\n// request拦截器\nservice.interceptors.request.use(config => {\n  // 在发送请求之前做些什么\n  if (store.getters.token) {\n    // 让每个请求携带自定义token\n    config.headers['Authorization'] = `Bearer ${getToken()}`;\n  }\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  console.log(error); // for debug\n  return Promise.reject(error);\n});\n\n// response拦截器\nservice.interceptors.response.use(\n/**\n * 通过判断HTTP状态码和业务状态码来判断响应状态\n */\nresponse => {\n  const res = response.data;\n\n  // 如果响应的状态码不是200，说明有问题\n  if (response.status !== 200) {\n    message.error(res.message || '网络错误');\n    return Promise.reject(new Error(res.message || '网络错误'));\n  }\n\n  // 如果业务状态码不是1，说明业务处理失败\n  if (res.code !== 1) {\n    // 40001: 未登录或Token过期; 40003: 权限不足\n    if (res.code === -1) {\n      // 重新登录\n      Modal.confirm({\n        title: '登录失效',\n        content: '您的登录状态已失效，请重新登录',\n        okText: '重新登录',\n        cancelText: '取消',\n        onOk: () => {\n          store.dispatch('user/resetToken').then(() => {\n            location.reload();\n          });\n        }\n      });\n    } else {\n      message.error(res.msg || '操作失败');\n    }\n    return Promise.reject(new Error(res.msg || '操作失败'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.log('err' + error); // for debug\n  const {\n    response\n  } = error;\n  if (response && response.status) {\n    switch (response.status) {\n      case 401:\n        // 401: 未登录或Token过期\n        store.dispatch('user/resetToken').then(() => {\n          location.reload();\n        });\n        break;\n      case 403:\n        // 403: 权限不足\n        notification.error({\n          message: '权限不足',\n          description: '您没有权限访问此资源'\n        });\n        break;\n      case 404:\n        // 404: 资源不存在\n        notification.error({\n          message: '资源不存在',\n          description: '您访问的资源不存在'\n        });\n        break;\n      case 500:\n        // 500: 服务器内部错误\n        notification.error({\n          message: '服务器错误',\n          description: '服务器遇到了一个错误'\n        });\n        break;\n      default:\n        // 其他错误\n        notification.error({\n          message: '网络错误',\n          description: error.message || '未知错误'\n        });\n    }\n  } else {\n    // 网络错误\n    notification.error({\n      message: '网络错误',\n      description: '网络连接失败，请检查您的网络'\n    });\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Modal","notification","message","store","getToken","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","getters","token","headers","error","console","log","Promise","reject","response","res","data","status","Error","code","confirm","title","content","okText","cancelText","onOk","dispatch","then","location","reload","msg","description"],"sources":["/Users/tungwoo/IdeaProject/laundry/admin/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\nimport { Modal, notification, message } from 'ant-design-vue';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || 'http://localhost:8080/api', // api的base_url\n  timeout: 15000 // 请求超时时间\n});\n\n// request拦截器\nservice.interceptors.request.use(\n  config => {\n    // 在发送请求之前做些什么\n    if (store.getters.token) {\n      // 让每个请求携带自定义token\n      config.headers['Authorization'] = `Bearer ${getToken()}`;\n    }\n    return config;\n  },\n  error => {\n    // 对请求错误做些什么\n    console.log(error); // for debug\n    return Promise.reject(error);\n  }\n);\n\n// response拦截器\nservice.interceptors.response.use(\n  /**\n   * 通过判断HTTP状态码和业务状态码来判断响应状态\n   */\n  response => {\n    const res = response.data;\n\n    // 如果响应的状态码不是200，说明有问题\n    if (response.status !== 200) {\n      message.error(res.message || '网络错误');\n      return Promise.reject(new Error(res.message || '网络错误'));\n    }\n\n    // 如果业务状态码不是1，说明业务处理失败\n    if (res.code !== 1) {\n      // 40001: 未登录或Token过期; 40003: 权限不足\n      if (res.code === -1) {\n        // 重新登录\n        Modal.confirm({\n          title: '登录失效',\n          content: '您的登录状态已失效，请重新登录',\n          okText: '重新登录',\n          cancelText: '取消',\n          onOk: () => {\n            store.dispatch('user/resetToken').then(() => {\n              location.reload();\n            });\n          }\n        });\n      } else {\n        message.error(res.msg || '操作失败');\n      }\n      return Promise.reject(new Error(res.msg || '操作失败'));\n    } else {\n      return res;\n    }\n  },\n  error => {\n    console.log('err' + error); // for debug\n    const { response } = error;\n    \n    if (response && response.status) {\n      switch (response.status) {\n        case 401:\n          // 401: 未登录或Token过期\n          store.dispatch('user/resetToken').then(() => {\n            location.reload();\n          });\n          break;\n        case 403:\n          // 403: 权限不足\n          notification.error({\n            message: '权限不足',\n            description: '您没有权限访问此资源'\n          });\n          break;\n        case 404:\n          // 404: 资源不存在\n          notification.error({\n            message: '资源不存在',\n            description: '您访问的资源不存在'\n          });\n          break;\n        case 500:\n          // 500: 服务器内部错误\n          notification.error({\n            message: '服务器错误',\n            description: '服务器遇到了一个错误'\n          });\n          break;\n        default:\n          // 其他错误\n          notification.error({\n            message: '网络错误',\n            description: error.message || '未知错误'\n          });\n      }\n    } else {\n      // 网络错误\n      notification.error({\n        message: '网络错误',\n        description: '网络连接失败，请检查您的网络'\n      });\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default service; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}