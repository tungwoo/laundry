{"ast":null,"code":"import axios from 'axios';\nimport { Modal, notification, message } from 'ant-design-vue';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL || '/api',\n  // API的基础URL\n  timeout: 10000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在发送请求之前做些什么\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  console.error(error); // for debug\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(\n/**\n * 通过判断HTTP状态码和业务状态码来判断响应状态\n */\nresponse => {\n  const res = response.data;\n\n  // 如果响应的状态码不是200，说明有问题\n  if (response.status !== 200) {\n    message.error(res.message || '网络错误');\n    return Promise.reject(new Error(res.message || '网络错误'));\n  }\n\n  // 如果业务状态码不是1，说明业务处理失败\n  if (res.code !== 1) {\n    message.error(res.msg || '操作失败');\n\n    // 401: 未登录或token过期\n    if (res.code === 401) {\n      // 清除token并重定向到登录页\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(new Error(res.msg || '未知错误'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.error('请求错误:', error); // for debug\n  message.error(error.message || '网络错误，请稍后重试');\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Modal","notification","message","store","getToken","service","create","baseURL","process","env","VUE_APP_API_BASE_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","error","console","Promise","reject","response","res","data","status","Error","code","msg","removeItem","window","location","href"],"sources":["/Users/tungwoo/IdeaProject/laundry/admin/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\nimport { Modal, notification, message } from 'ant-design-vue';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL || '/api', // API的基础URL\n  timeout: 10000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    // 在发送请求之前做些什么\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    // 对请求错误做些什么\n    console.error(error); // for debug\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\nservice.interceptors.response.use(\n  /**\n   * 通过判断HTTP状态码和业务状态码来判断响应状态\n   */\n  response => {\n    const res = response.data;\n\n    // 如果响应的状态码不是200，说明有问题\n    if (response.status !== 200) {\n      message.error(res.message || '网络错误');\n      return Promise.reject(new Error(res.message || '网络错误'));\n    }\n\n    // 如果业务状态码不是1，说明业务处理失败\n    if (res.code !== 1) {\n      message.error(res.msg || '操作失败');\n      \n      // 401: 未登录或token过期\n      if (res.code === 401) {\n        // 清除token并重定向到登录页\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n      \n      return Promise.reject(new Error(res.msg || '未知错误'));\n    } else {\n      return res;\n    }\n  },\n  error => {\n    console.error('请求错误:', error); // for debug\n    message.error(error.message || '网络错误，请稍后重试');\n    return Promise.reject(error);\n  }\n);\n\nexport default service; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,YAAY,EAAEC,OAAO,QAAQ,gBAAgB;AAC7D,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA,MAAMC,OAAO,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,MAAM;EAAE;EACrDC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACP;EACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;EACtB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,OAAO,CAACO,YAAY,CAACY,QAAQ,CAACV,GAAG;AAC/B;AACF;AACA;AACEU,QAAQ,IAAI;EACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;;EAEzB;EACA,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IAC3BzB,OAAO,CAACkB,KAAK,CAACK,GAAG,CAACvB,OAAO,IAAI,MAAM,CAAC;IACpC,OAAOoB,OAAO,CAACC,MAAM,CAAC,IAAIK,KAAK,CAACH,GAAG,CAACvB,OAAO,IAAI,MAAM,CAAC,CAAC;EACzD;;EAEA;EACA,IAAIuB,GAAG,CAACI,IAAI,KAAK,CAAC,EAAE;IAClB3B,OAAO,CAACkB,KAAK,CAACK,GAAG,CAACK,GAAG,IAAI,MAAM,CAAC;;IAEhC;IACA,IAAIL,GAAG,CAACI,IAAI,KAAK,GAAG,EAAE;MACpB;MACAZ,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;IAEA,OAAOZ,OAAO,CAACC,MAAM,CAAC,IAAIK,KAAK,CAACH,GAAG,CAACK,GAAG,IAAI,MAAM,CAAC,CAAC;EACrD,CAAC,MAAM;IACL,OAAOL,GAAG;EACZ;AACF,CAAC,EACDL,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC,CAAC,CAAC;EAC/BlB,OAAO,CAACkB,KAAK,CAACA,KAAK,CAAClB,OAAO,IAAI,YAAY,CAAC;EAC5C,OAAOoB,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}